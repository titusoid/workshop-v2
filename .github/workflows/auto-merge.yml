name: Enable Auto-merge when ready

on:
  pull_request:
    branches: [ main ]
    types: [labeled, edited, ready_for_review, reopened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  enable-auto-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Check merge preconditions
        id: precheck
        env:
          LABELS: ${{ join(github.event.pull_request.labels.*.name, ',') }}
          DRAFT:  ${{ github.event.pull_request.draft }}
          BASE:   ${{ github.event.pull_request.base.ref }}
        run: |
          ok=true
          [ "$DRAFT" = "true" ] && echo "PR is draft." && ok=false
          [ "$BASE" != "main" ] && echo "PR base is not main." && ok=false
          case ",$LABELS," in *,merge,*) ;; *) echo "Missing 'merge' label." && ok=false ;; esac
          echo "ok=$ok" >> $GITHUB_OUTPUT
          [ "$ok" = "true" ] || { echo "Auto-merge prerequisites not met."; exit 1; }

      - name: Check approvals
        id: approvals
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO:     ${{ github.repository }}
          NUM:      ${{ github.event.pull_request.number }}
        run: |
          approved=$(gh pr view $NUM --repo "$REPO" --json reviews --jq '[.reviews[] | select(.state=="APPROVED") | .author.login] | unique | length')
          echo "Approvals: $approved"
          [ "$approved" -ge 1 ] || { echo "No approvals yet."; exit 1; }

      - name: Enable GitHub Auto-merge (squash)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO:     ${{ github.repository }}
          NUM:      ${{ github.event.pull_request.number }}
        run: |
          gh pr merge "$NUM" --repo "$REPO" --auto --squash

      - name: Show PR merge state
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO:     ${{ github.repository }}
          NUM:      ${{ github.event.pull_request.number }}
        run: |
          gh pr view "$NUM" --repo "$REPO" --json number,mergeStateStatus,autoMergeRequest,reviewDecision,isDraft,baseRefName --jq .
