name: Merge when labeled and green

on:
  pull_request:
    branches: [ main ]
    types: [labeled, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write

jobs:
  merge:
    # Only start when the merge label is present and it's a real PR to main (not draft)
    if: >
      github.event.pull_request.base.ref == 'main' &&
      !github.event.pull_request.draft &&
      contains(github.event.pull_request.labels.*.name, 'merge')
    runs-on: ubuntu-latest

    steps:
      - name: Check approvals (>=1)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO:     ${{ github.repository }}
          NUM:      ${{ github.event.pull_request.number }}
        run: |
          count=$(gh pr view "$NUM" --repo "$REPO" --json reviews \
            --jq '[.reviews[] | select(.state=="APPROVED") | .author.login] | unique | length')
          echo "Approvals: $count"
          if [ "$count" -lt 1 ]; then
            echo "PR does not have the required approval(s)."
            exit 1
          fi

      - name: Wait for all required checks to succeed (combined status)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO:     ${{ github.repository }}
          SHA:      ${{ github.event.pull_request.head.sha }}
        run: |
          # Poll the combined status until it's "success" or fails/times out
          # Timeout ~10 minutes (60 * 10s)
          attempts=60
          sleep_secs=10

          echo "Waiting for required checks on $SHA ..."
          for i in $(seq 1 $attempts); do
            state=$(gh api repos/$REPO/commits/$SHA/status --jq .state)
            echo "Attempt $i: combined status = $state"
            case "$state" in
              success)
                echo "All required checks passed."
                break
                ;;
              failure|error)
                echo "One or more required checks failed."
                # Print failing/pending check-runs for quick diagnostics
                gh api repos/$REPO/commits/$SHA/check-runs -H "Accept: application/vnd.github+json" \
                  --jq '.check_runs[] | select(.conclusion!="success") | {name, conclusion, status, html_url}'
                exit 1
                ;;
              *)
                # pending / null / intermediate â†’ keep waiting
                sleep $sleep_secs
                ;;
            esac

            if [ "$state" = "success" ]; then
              break
            fi
          done

          if [ "$state" != "success" ]; then
            echo "Timed out waiting for required checks to pass."
            # Show current non-success check runs to help debugging
            gh api repos/$REPO/commits/$SHA/check-runs -H "Accept: application/vnd.github+json" \
              --jq '.check_runs[] | select(.conclusion!="success") | {name, conclusion, status, html_url}'
            exit 1
          fi

      - name: Merge PR (squash and delete branch)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO:     ${{ github.repository }}
          NUM:      ${{ github.event.pull_request.number }}
        run: |
          gh pr merge "$NUM" --repo "$REPO" --squash --delete-branch --admin=false
